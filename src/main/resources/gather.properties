#mysql
MysqlDriverName=com.mysql.cj.jdbc.Driver
MysqlUrl=jdbc:mysql://pd-cdh-192-168-0-3-node:3306
MysqlUser=root
MysqlPassword=pdroot21
MysqlDB=gather
MysqlTableName=gather_data

#是否创建hive表
createTable=true

#hive jdbc
hiveDriverName=org.apache.hive.jdbc.HiveDriver
hiveUrl=jdbc:hive2://pd-cdh-192-168-0-9-node:10001
hiveUser=zengqy
hivePassword=zeng

#dc_stg 库
#hive表后缀   --->表名：前缀_mysqlDbName_mysqlTableName_后缀
hiveStgTablelastfix=stg
hiveStgTableType=inner
#hive表在hdfs的路径
hiveStgTablePath=/user/hive/warehouse/dc_stg.db
#hive表数据字段分割符
hiveStgRowFormat="\\\001"
#hive表的格式
hiveStgStoreType=TEXTFILE
#hive表添加额外的字段
hiveStgAddcol=`stg_update_time` string COMMENT "insert time"
#上面新增额外字段的赋值函数，字段名与上面要一致
hiveStgQuerySqlPartation=from_unixtime(unix_timestamp(),'%Y-%m-%d %H:%i:%s') as stg_update_time
hiveStgCompressionType=gzip

#dc_ods 库，参数意义同stg
hiveOdsTablelastfix=ods
hiveOdsTableType=inner
hiveOdsTablePath=/user/hive/warehouse/dc_ods.db
hiveOdsRowFormat="\\\001"
hiveOdsStoreType=parquet
hiveOdsCompressionType=snappy
hiveOdsAddcol=`ods_update_time` string COMMENT "insert time"

#hive表分区字段
hivePartitioncol=`partition_date` int
#增量：datax拉取mysql的数据，拉取一天的，update_time是数据源的表字段。
hiveStgQuerySqlWhereOfIncrement=WHERE DATE_FORMAT(update_time,'%Y-%m-%d')>=${start_time} AND DATE_FORMAT(update_time,'%Y-%m-%d')< ${end_time}

#dolphin url
url=http://pd-cdh-192-168-0-3-node:12346
#dolphin个人用户token
token=cccf1080b380dd2c761af340ce3def5c
#dolphin个人用户数据源
dolphinSqlDatasourceName=Hive_zengqy
#dolphin的个人用户租户id
tenantId=3

#生成dolphin任务的json
connects=[{"endPointSourceId":"tasks-49159","endPointTargetId":"tasks-20327"},{"endPointSourceId":"tasks-20327","endPointTargetId":"tasks-27481"},{"endPointSourceId":"tasks-27481","endPointTargetId":"tasks-37111"}]
processDefinitionJson={\"tenantId\":$tenantId,\"globalParams\":[{\"prop\":\"global_start_time\",\"direct\":\"IN\",\"type\":\"VARCHAR\",\"value\":\"date_sub(current_date(),interval 1 day)\"},{\"prop\":\"global_end_time\",\"direct\":\"IN\",\"type\":\"VARCHAR\",\"value\":\"current_date()\"}],\"tasks\":[{\"conditionResult\":{\"successNode\":[\"\"],\"failedNode\":[\"\"]},\"description\":\"truncate stg\",\"runFlag\":\"NORMAL\",\"type\":\"SQL\",\"params\":{\"postStatements\":[],\"connParams\":\"\",\"receiversCc\":\"\",\"udfs\":\"\",\"type\":\"HIVE\",\"title\":\"\",\"sql\":\"truncate table dc_stg.$stgTableName\",\"preStatements\":[],\"sqlType\":\"1\",\"sendEmail\":false,\"receivers\":\"\",\"datasource\":4,\"displayRows\":10,\"showType\":\"TABLE\",\"localParams\":[],\"datasourceName\":\"$datasourceName\"},\"timeout\":{\"enable\":true,\"interval\":10,\"strategy\":\"WARN\"},\"maxRetryTimes\":2,\"taskInstancePriority\":\"MEDIUM\",\"name\":\"truncate stg\",\"dependence\":{},\"retryInterval\":\"1\",\"preTasks\":[],\"id\":\"tasks-49159\",\"workerGroup\":\"datax\"},{\"conditionResult\":{\"successNode\":[\"\"],\"failedNode\":[\"\"]},\"description\":\"mysql to stg\",\"runFlag\":\"NORMAL\",\"type\":\"DATAX\",\"params\":{\"customConfig\":1,\"json\":\"$dataxJson\",\"localParams\":[{\"prop\":\"start_time\",\"direct\":\"IN\",\"type\":\"VARCHAR\",\"value\":\"${global_start_time}\"},{\"prop\":\"end_time\",\"direct\":\"IN\",\"type\":\"VARCHAR\",\"value\":\"${global_end_time}\"}]},\"timeout\":{\"enable\":true,\"interval\":5,\"strategy\":\"WARN\"},\"maxRetryTimes\":2,\"taskInstancePriority\":\"MEDIUM\",\"name\":\"mysql2stg\",\"dependence\":{},\"retryInterval\":\"1\",\"preTasks\":[\"truncate stg\"],\"id\":\"tasks-20327\",\"workerGroup\":\"datax\"},{\"conditionResult\":{\"successNode\":[\"\"],\"failedNode\":[\"\"]},\"description\":\"stg to ods\",\"runFlag\":\"NORMAL\",\"type\":\"SQL\",\"params\":{\"postStatements\":[],\"connParams\":\"\",\"receiversCc\":\"\",\"udfs\":\"\",\"type\":\"HIVE\",\"title\":\"\",\"sql\":\"$stgToOdsSql\",\"preStatements\":[],\"sqlType\":\"1\",\"sendEmail\":false,\"receivers\":\"\",\"datasource\":4,\"displayRows\":10,\"showType\":\"TABLE\",\"localParams\":[],\"datasourceName\":\"$datasourceName\"},\"timeout\":{\"enable\":false,\"strategy\":\"\"},\"maxRetryTimes\":2,\"taskInstancePriority\":\"MEDIUM\",\"name\":\"stg2ods\",\"dependence\":{},\"retryInterval\":\"1\",\"preTasks\":[\"mysql2stg\"],\"id\":\"tasks-27481\",\"workerGroup\":\"datax\"},{\"conditionResult\":{\"successNode\":[\"\"],\"failedNode\":[\"\"]},\"description\":\"\",\"runFlag\":\"NORMAL\",\"type\":\"SHELL\",\"params\":{\"rawScript\":\"#!/bin/bash\\nimpala-shell -i pd-cdh-192-168-0-7-node:21000 -l -u operate --ldap_password_cmd='echo -n operate' --auth_creds_ok_in_clear -q \\\"INVALIDATE METADATA dc_ods.$odsTableName\\\"\\n\",\"localParams\":[],\"resourceList\":[]},\"timeout\":{\"enable\":true,\"interval\":30,\"strategy\":\"WARN\"},\"maxRetryTimes\":2,\"taskInstancePriority\":\"MEDIUM\",\"name\":\"INVALIDATE_METADATA\",\"dependence\":{},\"retryInterval\":\"1\",\"preTasks\":[\"stg2ods\"],\"id\":\"tasks-37111\",\"workerGroup\":\"datax\"}],\"timeout\":0}
locations={"tasks-49159":{"name":"truncate stg","targetarr":"","nodenumber":"1","x":242,"y":144},"tasks-20327":{"name":"mysql2stg","targetarr":"tasks-49159","nodenumber":"1","x":395,"y":225},"tasks-27481":{"name":"stg2ods","targetarr":"tasks-20327","nodenumber":"1","x":500,"y":362},"tasks-37111":{"name":"INVALIDATE_METADATA","targetarr":"tasks-27481","nodenumber":"0","x":624,"y":392}}
projectName=GatherTest

#dolphin scheduler json
schedule={"startTime":"2021-09-13 00:00:00","endTime":"2121-09-13 00:00:00","crontab":"%s"}
failureStrategy=CONTINUE
warningType=NONE
processInstancePriority=MEDIUM
warningGroupId=0
receivers=
receiversCc=
workerGroup=default

#dolphin stg库到Ods库的sql
stgToOdsSqlOfIncre=insert overwrite table dc_ods.$odsTableName partition($partition_col_name)\\nselect  \\n   $odsCols cast(date_format(ods_t.update_time,'yyyyMM') as int) as $partition_col_name\\nFROM dc_ods.$odsTableName ods_t\\nLEFT JOIN dc_stg.$stgTableName stg_t \\nON ods_t.id = stg_t.id  \\nwhere stg_t.id is null\\nUnion all\\nselect \\n   $stg_tCols stg_t.$partition_col_name\\nfrom\\n(\\nSELECT\\n   $stgCols \\n    cast(date_format(update_time,'yyyyMM') as int) as $partition_col_name,\\n   row_number() over(PARTITION BY id ORDER BY update_time DESC) rm\\n    FROM dc_stg.$stgTableName \\n)stg_t\\nWHERE stg_t.rm = 1
stgToOdsSqlOfSnapshot=insert overwrite table dc_ods.$odsTableName partition($partition_col_name)\\nselect  \\n     $stgCols cast(date_format(date_sub(stg_update_time,1 ),'yyyyMMdd') as int) as $partition_col_name\\nfrom dc_stg.$stgTableName
stgToOdsSqlOfFull=insert overwrite table dc_ods.$odsTableName \\nselect  \\n   $stgCols        \\nfrom dc_stg.$stgTableName



#暂使未使用的字段
processDefinitionName=sts_run_day_ods
scheduleCrontab="0 30 8 * * ? *"
scheduleEndTime="2121-09-07 00:00:00"
scheduleFailureStrategy="CONTINUE"
scheduleProcessInstancePriority="MEDIUM"
scheduleReleaseState="OFFLINE"
scheduleStartTime="2021-09-07 00:00:00"
scheduleWarningGroupId=0
scheduleWarningType="NONE"
scheduleWorkerGroupName="datax"

